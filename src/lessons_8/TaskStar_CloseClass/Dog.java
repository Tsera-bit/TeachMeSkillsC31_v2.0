package lessons_8.TaskStar_CloseClass;

class Dog {
    // Делаем конструктор приватным что не позволит создать объект класс Dog
    // Можно создать второй конструктор, который принимает значение,
    // Тогда если будет необходимо создать объект класса Dog необходимо будет передать значение конструктору
    // Например Имя или другое.
    // Или создать static конструктор при необходимости проверки или настройки Объекта класса Dog
    private Dog() {

    }
    // Метод статичен он принадлежит классу Dog,
    // Его можно использовать только через имя класса Dog.eat("Meat").
    // Данным методом не может пользоваться Объект клаcса Dog,
    // name.eat("Meat") ошибка компилятор не пропустит или попросит убрать модификатор static
    static void eat (String food) {
        if (food.equals("Meat")) {
            System.out.println("Ест мясо с удовольствием");
        } else {
            System.out.println("Это он не хочет");
        }
    }

    static void voice() {
        System.out.println("Гав-гав");
    }
}
